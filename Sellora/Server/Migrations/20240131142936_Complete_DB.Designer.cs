// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sellora.Server.Data;

#nullable disable

namespace Sellora.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240131142936_Complete_DB")]
    partial class Complete_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ad2bcf0c-20db-474f-8407-5a6b159518ba",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "bd2bcf0c-20db-474f-8407-5a6b159518bb",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "595b2485-3bfa-4b70-9209-7526bdb84f37",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            RoleId = "ad2bcf0c-20db-474f-8407-5a6b159518ba"
                        },
                        new
                        {
                            UserId = "b1675205-1948-44ec-8b55-b0cb71d1f84e",
                            RoleId = "bd2bcf0c-20db-474f-8407-5a6b159518bb"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Sellora.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserLastOnline")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UserRegDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3781efa7-66dc-47f0-860f-e506d04102e4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ecbc3bc-8d3e-4163-a7ca-1169fa736d28",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAENYmjRh66WU4fmLq3PyObcFpbc4dGgVVa0e+O6UQwJhyKPb4s28Ob8NEKxZiz6R1lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4094d091-ff4a-4e0a-b908-5918a54a7af7",
                            TwoFactorEnabled = false,
                            UserFirstName = "Admin",
                            UserLastName = "User",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(7272),
                            UserName = "Admin",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(7263)
                        },
                        new
                        {
                            Id = "b1675205-1948-44ec-8b55-b0cb71d1f84e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "79fc28ba-c96b-4f8a-806f-9d85db772a7e",
                            Email = "user@localhost.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@LOCALHOST.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAIAAYagAAAAELX9QhMebhwitS51kt2kEVIi1/dvVCU6iMbR0InH0CbbmHwf7aH4fMFK7XkjOdr8fg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fbab9612-85e2-4033-a70f-c6501514a266",
                            TwoFactorEnabled = false,
                            UserFirstName = "User",
                            UserLastName = "User",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 342, DateTimeKind.Local).AddTicks(2572),
                            UserName = "user",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 342, DateTimeKind.Local).AddTicks(2557)
                        });
                });

            modelBuilder.Entity("Sellora.Shared.Domain.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserHPNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UserLastOnline")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserRegDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Passionate about all things digital and SEO wizardry 🚀 | Helping businesses climb the search engine ranks 📈 | Coffee enthusiast ☕ | Explorer of new tech and trends 🌐 | #SEOExpert #DigitalMarketing",
                            UserEmail = "sy123@gmail.com",
                            UserFirstName = "Seo",
                            UserHPNum = "88123123",
                            UserLastName = "Yeong",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 439, DateTimeKind.Local).AddTicks(6127),
                            UserName = "SeoCoolSeoYeong",
                            UserPassword = "AQAAAAIAAYagAAAAEBGP2kkb6foN0SBCKwzAiF9anhpHfG4PZLccAPhoNUlsHiyXy2G/lOY88cfBfyZngA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 439, DateTimeKind.Local).AddTicks(6113)
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Creative soul navigating the digital realm 🌟 | Graphic designer by day, dreamer by night ✨ | Turning ideas into visual wonders 🎨 | Coffee addict ☕ | Embracing the beauty of design and storytelling 🖌️ | #GraphicDesigner #Dreamer",
                            UserEmail = "tt123@gmail.com",
                            UserFirstName = "Tina",
                            UserHPNum = "88445566",
                            UserLastName = "Tan",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 490, DateTimeKind.Local).AddTicks(4380),
                            UserName = "TT_4Me",
                            UserPassword = "AQAAAAIAAYagAAAAEJwzI1ZekiGHn6Brqjp/ioIDz1ohbVzSM4wb9f/0UN0FqZ9mf9vEbhrBpiIVwBQRRQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 490, DateTimeKind.Local).AddTicks(4365)
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Adventurous spirit with a flair for tech and innovation 🚀 | Coding maestro by day, gaming wizard by night 🎮 | Constantly exploring the digital frontier 💻 | Fuelled by curiosity and a love for challenges 🌐 | Living life one line of code at a time! #TechExplorer #GamingEnthusiast",
                            UserEmail = "kl23@gmail.com",
                            UserFirstName = "Kaynan",
                            UserHPNum = "85445666",
                            UserLastName = "Loh",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 543, DateTimeKind.Local).AddTicks(889),
                            UserName = "Kay_today",
                            UserPassword = "AQAAAAIAAYagAAAAEKhhLDlDfQ7DrrmpD4X6oO9zqEggCP6FYX1io06HvGAfUIvsKjcu8M3SgX5b5ARprA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 543, DateTimeKind.Local).AddTicks(869)
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Passionate about coding adventures and tech wonders 🌟 | Coffee-fueled developer by day, gaming enthusiast by night 🎮 | Embracing challenges and turning ideas into reality 💡 | #CodeExplorer #TechEnthusiast",
                            UserEmail = "alex.smith@example.com",
                            UserFirstName = "Alex",
                            UserHPNum = "98765210",
                            UserLastName = "Smith",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 589, DateTimeKind.Local).AddTicks(9253),
                            UserName = "AdventureCoder",
                            UserPassword = "AQAAAAIAAYagAAAAELk7wL8crG5a33SST7u+aevKqsbX+4j21ZUx7Fs6ngT8Nn+tiCbyI8k6rl8tnkqi0Q==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 589, DateTimeKind.Local).AddTicks(9234)
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Digital nomad exploring the virtual realms 🌍 | Coding on-the-go and crafting unique digital experiences ✨ | Passionate about connecting through technology 🚀 | #DigitalNomad #CodeExplorer",
                            UserEmail = "emma.johnson@example.com",
                            UserFirstName = "Emma",
                            UserHPNum = "87654109",
                            UserLastName = "Johnson",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 641, DateTimeKind.Local).AddTicks(3627),
                            UserName = "DigitalNomad21",
                            UserPassword = "AQAAAAIAAYagAAAAELFTUHwu3cSGwphLuaENFM4S7r3mF9MINvCpeZemDPV5m79oKyHzmLwrbVoHL9/seg==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 641, DateTimeKind.Local).AddTicks(3613)
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Tech enthusiast looking to swap and sell gadgets 📱💻 | Always up for the latest tech trends and innovations 🚀 | Let's connect and trade! #TechSwap #GadgetLover",
                            UserEmail = "alex.smith@example.com",
                            UserFirstName = "Alex",
                            UserHPNum = "98763210",
                            UserLastName = "Smith",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 687, DateTimeKind.Local).AddTicks(7950),
                            UserName = "TechEnthusiast",
                            UserPassword = "AQAAAAIAAYagAAAAEHi8pvB/z7ZNC3ZevowfDq5zDolD3ZBmvE+lMx/qhh9+djJNbFoFpnc8FFStK3heVQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 687, DateTimeKind.Local).AddTicks(7936)
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Fashionista with a passion for style and trends 👗👠 | Closet cleanout and trendy swaps | Let's trade fashion finds! #FashionSwap #StyleExplorer",
                            UserEmail = "sophie.miller@example.com",
                            UserFirstName = "Sophie",
                            UserHPNum = "87698765",
                            UserLastName = "Miller",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 734, DateTimeKind.Local).AddTicks(4581),
                            UserName = "Fashionista23",
                            UserPassword = "AQAAAAIAAYagAAAAEHg5SCa98YkHvsPd5QMMNUzCj0hwusQhdowO+BI8W6QNdf0YdTSBFO/4lknfHjMdTg==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 734, DateTimeKind.Local).AddTicks(4567)
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Gaming pro seeking to trade and sell video games 🎮 | From classics to the latest releases | Let's level up together! #GameSwap #GamerLife",
                            UserEmail = "ryan.clark@example.com",
                            UserFirstName = "Ryan",
                            UserHPNum = "90345678",
                            UserLastName = "Clark",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 779, DateTimeKind.Local).AddTicks(7771),
                            UserName = "GamingPro99",
                            UserPassword = "AQAAAAIAAYagAAAAENRlbM73QDEOeRfX4QOonqR79+zkJ4GhlZ2tLlRXNwFwhXZHN8asNEYqwItP4JjEag==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 779, DateTimeKind.Local).AddTicks(7757)
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Bookworm passionate about literature 📚 | Looking to swap and sell books of all genres | Let's share the joy of reading! #BookSwap #LiteraryExplorer",
                            UserEmail = "olivia.taylor@example.com",
                            UserFirstName = "Olivia",
                            UserHPNum = "87651256",
                            UserLastName = "Taylor",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 830, DateTimeKind.Local).AddTicks(1908),
                            UserName = "BookWorm89",
                            UserPassword = "AQAAAAIAAYagAAAAELDQJtezOxLKQexKtL6In9vzop3+4ROUIbSlwGzQZHQTPDV9cNmUWTGHKPuRz4pvgQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 830, DateTimeKind.Local).AddTicks(1894)
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Outdoor enthusiast and adventurer 🏞️ | Swapping and selling outdoor gear and equipment | Let's explore the world together! #AdventureSwap #NatureExplorer",
                            UserEmail = "jake.anderson@example.com",
                            UserFirstName = "Jake",
                            UserHPNum = "90129854",
                            UserLastName = "Anderson",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 877, DateTimeKind.Local).AddTicks(3380),
                            UserName = "OutdoorAdventurer",
                            UserPassword = "AQAAAAIAAYagAAAAEDUgU6yO87apOs+BMrPLpnb5au0TaAo/A5bxzeOCYrdqvY96xFJ3GL+EbkMlPfpW8A==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 877, DateTimeKind.Local).AddTicks(3366)
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Home decor enthusiast with a flair for design 🏡 | Swapping and selling unique decor pieces | Let's create stylish living spaces! #DecorSwap #HomeDesign",
                            UserEmail = "mia.ramirez@example.com",
                            UserFirstName = "Mia",
                            UserHPNum = "87652012",
                            UserLastName = "Ramirez",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 923, DateTimeKind.Local).AddTicks(7363),
                            UserName = "HomeDecorGuru",
                            UserPassword = "AQAAAAIAAYagAAAAEOiRarsErtzhpucqxEvGigvBA5iCZuRkhsEMtrbau/9CWs1KP7L/dwG31KNoLTGyeA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 923, DateTimeKind.Local).AddTicks(7339)
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Fitness enthusiast on a journey to a healthier life 💪 | Swapping and selling workout gear and accessories | Let's achieve our fitness goals together! #FitnessSwap #HealthyLiving",
                            UserEmail = "brandon.harris@example.com",
                            UserFirstName = "Brandon",
                            UserHPNum = "90125432",
                            UserLastName = "Harris",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 35, 972, DateTimeKind.Local).AddTicks(1533),
                            UserName = "FitnessFreak2024",
                            UserPassword = "AQAAAAIAAYagAAAAEJMBsYVgNoGV+7Ce8MpKBQkg6+Y0yoIwxnPXGyrLSSQniN6KGDSdZh1pHDoJW3KpyA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 35, 972, DateTimeKind.Local).AddTicks(1518)
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Art lover and creative soul 🎨 | Swapping and selling unique artworks and handmade crafts | Let's appreciate and share the beauty of art! #ArtSwap #CreativeSpirit",
                            UserEmail = "eva.chen@example.com",
                            UserFirstName = "Eva",
                            UserHPNum = "87655678",
                            UserLastName = "Chen",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 20, DateTimeKind.Local).AddTicks(2628),
                            UserName = "ArtisticExplorer",
                            UserPassword = "AQAAAAIAAYagAAAAELbRsO8ETIdl22FfCt82GmsIlYYBjAbTehm2pjXTdN2rN/UpwXGxHRaTKEmH/M16CQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 20, DateTimeKind.Local).AddTicks(2615)
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Passionate vintage collector and enthusiast 🕰️ | Swapping and selling unique retro finds | Let's cherish the charm of the past! #VintageSwap #RetroCollector",
                            UserEmail = "lillian.baker@example.com",
                            UserFirstName = "Lillian",
                            UserHPNum = "90128543",
                            UserLastName = "Baker",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 65, DateTimeKind.Local).AddTicks(4016),
                            UserName = "VintageCollector",
                            UserPassword = "AQAAAAIAAYagAAAAEM5SmPOseKpXHQhHXEgse6+kZ9MeJp0FnfpLNeViJV+MKD4J6Rfzull0oGHnf8sr/Q==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 65, DateTimeKind.Local).AddTicks(4002)
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Animal lover and pet enthusiast 🐾 | Swapping and selling pet accessories and supplies | Let's pamper our furry friends together! #PetSwap #AnimalCare",
                            UserEmail = "david.nguyen@example.com",
                            UserFirstName = "David",
                            UserHPNum = "87656789",
                            UserLastName = "Nguyen",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 110, DateTimeKind.Local).AddTicks(9259),
                            UserName = "PetLover21",
                            UserPassword = "AQAAAAIAAYagAAAAELgr08Q8UczlXwDQS++cZldrWexDeV51nVCvb6GFhY6qYAn9A1W67e3tVg+zizb66w==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 110, DateTimeKind.Local).AddTicks(9245)
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Film buff and cinephile 🎬 | Swapping and selling DVDs, Blu-rays, and movie memorabilia | Let's share our favorite cinematic experiences! #FilmSwap #Cinephilia",
                            UserEmail = "rachel.mitchell@example.com",
                            UserFirstName = "Rachel",
                            UserHPNum = "9012654321",
                            UserLastName = "Mitchell",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 157, DateTimeKind.Local).AddTicks(9251),
                            UserName = "FilmBuff87",
                            UserPassword = "AQAAAAIAAYagAAAAEMDdSV/GuHDSfPl/5L3WQvDu71LvrOZAIK42JZoTz84qZIG7dCaZhMrjnfr6lDYjdA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 157, DateTimeKind.Local).AddTicks(9237)
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Music enthusiast and maestro 🎶 | Swapping and selling vinyl records, instruments, and music accessories | Let's create a symphony of sounds! #MusicSwap #MelodyMaker",
                            UserEmail = "daniel.garcia@example.com",
                            UserFirstName = "Daniel",
                            UserHPNum = "8765567890",
                            UserLastName = "Garcia",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 206, DateTimeKind.Local).AddTicks(1497),
                            UserName = "MusicMaestro",
                            UserPassword = "AQAAAAIAAYagAAAAEEHfN690KPJ8uC25yT/KJYCIJYCLKWxFvQELThWewTibk0SrSoUfsP4fQ5aQI3ZPWw==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 206, DateTimeKind.Local).AddTicks(1477)
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "DIY crafts enthusiast and artisan ✂️ | Swapping and selling handmade crafts and DIY supplies | Let's unleash our creative spirits! #CraftSwap #DIYArtisan",
                            UserEmail = "ava.turner@example.com",
                            UserFirstName = "Ava",
                            UserHPNum = "9012543210",
                            UserLastName = "Turner",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 252, DateTimeKind.Local).AddTicks(1566),
                            UserName = "DIYCraftsman",
                            UserPassword = "AQAAAAIAAYagAAAAEFDkDD7A11HroKartd/ZE+GOAxoB4cnvtHYh6sSJii2Jb5GjOuJhkxQGN9uzJ8N5fA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 252, DateTimeKind.Local).AddTicks(1551)
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Food lover and culinary adventurer 🍲 | Swapping and selling gourmet ingredients and kitchenware | Let's savor the flavors of the world! #FoodSwap #CulinaryExplorer",
                            UserEmail = "isaac.evans@example.com",
                            UserFirstName = "Isaac",
                            UserHPNum = "8765678901",
                            UserLastName = "Evans",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 299, DateTimeKind.Local).AddTicks(7466),
                            UserName = "FoodieExplorer",
                            UserPassword = "AQAAAAIAAYagAAAAEAu98FLtxl+eqqHTnltCdGFd89ZNK0k4Rq9AOzzozaY7qSZKYio1+kAgU41yXASC3A==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 299, DateTimeKind.Local).AddTicks(7447)
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Fitness fanatic committed to a healthy lifestyle 💪 | Swapping and selling workout plans and fitness gear | Let's crush our fitness goals together! #FitnessSwap #HealthJunkie",
                            UserEmail = "lily.carter@example.com",
                            UserFirstName = "Lily",
                            UserHPNum = "9012432109",
                            UserLastName = "Carter",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 347, DateTimeKind.Local).AddTicks(333),
                            UserName = "FitnessFanatic",
                            UserPassword = "AQAAAAIAAYagAAAAEEN+JKKZeU4zoDfbG8OlbFb0KfjqetLf1Kqg7FHLK4VFiuCYpWJPu6pSXzXh7B95UQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 347, DateTimeKind.Local).AddTicks(314)
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Tech geek exploring the latest gadgets and innovations 🤖 | Swapping and selling tech accessories and devices | Let's embrace the digital revolution! #TechSwap #GadgetGeek",
                            UserEmail = "logan.thompson@example.com",
                            UserFirstName = "Logan",
                            UserHPNum = "8765789012",
                            UserLastName = "Thompson",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 396, DateTimeKind.Local).AddTicks(1870),
                            UserName = "TechGeek2024",
                            UserPassword = "AQAAAAIAAYagAAAAEBF5hqoQlQZCe3T9oKi9HsDhEv2G8cyBmZf7mP4pOwiLFEqyFfQAYJrwqDUhK/eXrw==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 396, DateTimeKind.Local).AddTicks(1856)
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Plant enthusiast with a green thumb 🌿 | Swapping and selling unique plants and gardening tools | Let's cultivate our love for nature! #PlantSwap #GreenLiving",
                            UserEmail = "sophia.williams@example.com",
                            UserFirstName = "Sophia",
                            UserHPNum = "9012321098",
                            UserLastName = "Williams",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 445, DateTimeKind.Local).AddTicks(7813),
                            UserName = "PlantEnthusiast",
                            UserPassword = "AQAAAAIAAYagAAAAEJDl1/30AA8lh8n+FFl4IiQ8c8QmEnbcAHkrvoDiO94KwZhG46yAFasumoT8munLOQ==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 445, DateTimeKind.Local).AddTicks(7799)
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Travel enthusiast with a passion for exploration ✈️ | Swapping and selling travel gear and accessories | Let's embark on new adventures! #TravelSwap #Wanderlust",
                            UserEmail = "leo.hernandez@example.com",
                            UserFirstName = "Leo",
                            UserHPNum = "8765890123",
                            UserLastName = "Hernandez",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 494, DateTimeKind.Local).AddTicks(6543),
                            UserName = "TravelExplorer",
                            UserPassword = "AQAAAAIAAYagAAAAEEgRqhKuHXyPPJ4Wbapnj3uxX9yvxjYRXRYguccW2NUGRtikev/jWg1hScyF6onS3w==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 494, DateTimeKind.Local).AddTicks(6524)
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Board game enthusiast and strategist 🎲 | Swapping and selling classic and modern board games | Let's have fun game nights! #GameSwap #BoardGameMaster",
                            UserEmail = "sophie.turner@example.com",
                            UserFirstName = "Sophie",
                            UserHPNum = "9012210987",
                            UserLastName = "Turner",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 542, DateTimeKind.Local).AddTicks(6209),
                            UserName = "BoardGameMaster",
                            UserPassword = "AQAAAAIAAYagAAAAEEccOAriU9cDhL2YrhpNjwztAbUEQUpnmEK1LB+n0u6LoUJH4Lt8ahCVuinqLJjfjA==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 542, DateTimeKind.Local).AddTicks(6191)
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Fashion-forward individual with an eye for style 👗🕶️ | Swapping and selling trendy fashion items | Let's stay ahead in the fashion game! #FashionSwap #StyleInnovator",
                            UserEmail = "mason.ward@example.com",
                            UserFirstName = "Mason",
                            UserHPNum = "8765987654",
                            UserLastName = "Ward",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 591, DateTimeKind.Local).AddTicks(1922),
                            UserName = "FashionForward",
                            UserPassword = "AQAAAAIAAYagAAAAEHGTlm7Jqjf7sqAF3kQ1JQ9OyJsLfPctIzZB4ZCAJADU/oK/+PlzqAgRq32v7v3D6Q==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 591, DateTimeKind.Local).AddTicks(1907)
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Tech innovator and early adopter of cutting-edge tech 🚀 | Swapping and selling innovative gadgets | Let's redefine the digital experience! #TechSwap #InnovationGeek",
                            UserEmail = "zoe.barnes@example.com",
                            UserFirstName = "Zoe",
                            UserHPNum = "9012109876",
                            UserLastName = "Barnes",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 637, DateTimeKind.Local).AddTicks(8166),
                            UserName = "TechInnovator",
                            UserPassword = "AQAAAAIAAYagAAAAEN44Gx8halkjPpI3NpfB3tM7gOWQyQIStkxp1oCEqnfyzTjytxPiTYODyvBgJkrjLg==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 637, DateTimeKind.Local).AddTicks(8152)
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Music explorer with a diverse taste in melodies 🎵 | Swapping and selling rare music albums and instruments | Let's discover new rhythms! #MusicSwap #SoundExplorer",
                            UserEmail = "natalie.johnson@example.com",
                            UserFirstName = "Natalie",
                            UserHPNum = "8765098765",
                            UserLastName = "Johnson",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 684, DateTimeKind.Local).AddTicks(2570),
                            UserName = "MusicExplorer",
                            UserPassword = "AQAAAAIAAYagAAAAEPYOo8NFStkHihpezrPKOxynO52wqYy9xpInrs3OXr90NuPO+78kjBwi4tYQPOxGNg==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 684, DateTimeKind.Local).AddTicks(2552)
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Artisan crafting unique handmade artworks and crafts 🎨 | Swapping and selling one-of-a-kind creations | Let's appreciate the beauty of craftsmanship! #ArtisanSwap #CraftedBeauty",
                            UserEmail = "elijah.fisher@example.com",
                            UserFirstName = "Elijah",
                            UserHPNum = "9012987654",
                            UserLastName = "Fisher",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 731, DateTimeKind.Local).AddTicks(2083),
                            UserName = "ArtisanCrafts",
                            UserPassword = "AQAAAAIAAYagAAAAEGvS0Hj4/e/Bc6EZyA1Mh7SnAbEISNQC6ZYxG94sWixGw4d7dWKvGwExdFxwPManFw==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 731, DateTimeKind.Local).AddTicks(2069)
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Culinary connoisseur and food enthusiast 🍳 | Swapping and selling gourmet ingredients and kitchen tools | Let's create delicious masterpieces! #CulinarySwap #FoodieDelight",
                            UserEmail = "hannah.clark@example.com",
                            UserFirstName = "Hannah",
                            UserHPNum = "8765234012",
                            UserLastName = "Clark",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 778, DateTimeKind.Local).AddTicks(2660),
                            UserName = "CulinaryConnoisseur",
                            UserPassword = "AQAAAAIAAYagAAAAEI6kVrr8edFK1uc8Hz2ZRr6px7v9PLSQUKN0qlG4bsBI5XVeXbZkfj09y+jgaitCrw==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 778, DateTimeKind.Local).AddTicks(2646)
                        },
                        new
                        {
                            Id = 30,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserDescription = "Board game enthusiast organizing epic game nights 🎲 | Swapping and selling classic and strategy board games | Let's roll the dice and have fun! #BoardGameSwap #GameNightOrganizer",
                            UserEmail = "caleb.roberts@example.com",
                            UserFirstName = "Caleb",
                            UserHPNum = "9012765432",
                            UserLastName = "Roberts",
                            UserLastOnline = new DateTime(2024, 1, 31, 22, 29, 36, 824, DateTimeKind.Local).AddTicks(6392),
                            UserName = "BoardGameEnthusiast",
                            UserPassword = "AQAAAAIAAYagAAAAEIGrXx1Q4l12Vwg8rRgGtjQxzvwyekLT72WN1GzZY2GnJPvisDMbd5jHGjrNa4hs6A==",
                            UserRegDate = new DateTime(2024, 1, 31, 22, 29, 36, 824, DateTimeKind.Local).AddTicks(6374)
                        });
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Cars",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6719),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6728),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Services",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6742),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6751),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Property",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6761),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6771),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Electronics",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6781),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6790),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Fashion",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6799),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6808),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Luxury",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6818),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6827),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Toys & Hobbies",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6837),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6846),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Games & Gaming",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6856),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6866),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Home Living",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6874),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6884),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Appliances",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6893),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6903),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Parenthood",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6912),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6922),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Health & Food",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6931),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6941),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Sports",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6951),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6960),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Pet Supplies",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6969),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6978),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "Jobs",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6988),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6997),
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Other Items",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(7007),
                            DateUpdated = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(7016),
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemClicks")
                        .HasColumnType("int");

                    b.Property<DateTime>("ItemDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ItemLikes")
                        .HasColumnType("int");

                    b.Property<string>("ItemLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ItemPrice")
                        .HasColumnType("int");

                    b.Property<int>("ItemStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            CategoryId = 4,
                            Condition = "Well Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1334,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4736),
                            ItemDescription = "Very good Keyboard, Served me for many years. Hope to find a new good owner for it.",
                            ItemLikes = 23,
                            ItemLocation = "Tampines West Street 42",
                            ItemName = "Tofu65 Keyboard",
                            ItemPrice = 200,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            CategoryId = 5,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4755),
                            ItemDescription = "Stylish vintage leather jacket in excellent condition. A timeless fashion piece for any wardrobe.",
                            ItemLikes = 45,
                            ItemLocation = "Orchard Road, Singapore",
                            ItemName = "Vintage Leather Jacket",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            CategoryId = 13,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1222,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4778),
                            ItemDescription = "Giant Talon mountain bike in excellent condition. Perfect for off-road adventures and trail riding.",
                            ItemLikes = 78,
                            ItemLocation = "Bukit Timah Nature Reserve",
                            ItemName = "Mountain Bike - Giant Talon",
                            ItemPrice = 500,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            CategoryId = 9,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4798),
                            ItemDescription = "Complete smart home security system with cameras and sensors. Enhance your home's safety with advanced technology.",
                            ItemLikes = 30,
                            ItemLocation = "Jurong West Street 21",
                            ItemName = "Smart Home Security System",
                            ItemPrice = 150,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            CategoryId = 7,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4817),
                            ItemDescription = "Beautiful antique chess set with intricate detailing. Perfect for chess enthusiasts and collectors.",
                            ItemLikes = 15,
                            ItemLocation = "Katong, Singapore",
                            ItemName = "Antique Chess Set",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            CategoryId = 10,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4840),
                            ItemDescription = "Powerful KitchenAid stand mixer, perfect for baking and cooking. In great condition, ready to mix up some delicious recipes.",
                            ItemLikes = 40,
                            ItemLocation = "Serangoon Avenue 4",
                            ItemName = "KitchenAid Stand Mixer",
                            ItemPrice = 250,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            CategoryId = 11,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4859),
                            ItemDescription = "Chicco Bravo baby stroller in excellent condition. Stylish and comfortable for your little one.",
                            ItemLikes = 25,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Baby Stroller - Chicco Bravo",
                            ItemPrice = 180,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            CategoryId = 12,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4878),
                            ItemDescription = "Subscription to a healthy meal prep service. Enjoy nutritious and delicious meals delivered to your doorstep.",
                            ItemLikes = 60,
                            ItemLocation = "Novena, Singapore",
                            ItemName = "Healthy Meal Prep Service",
                            ItemPrice = 50,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            CategoryId = 13,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4897),
                            ItemDescription = "Complete yoga mat and accessories set. Everything you need for a fulfilling yoga practice.",
                            ItemLikes = 35,
                            ItemLocation = "Clementi, Singapore",
                            ItemName = "Yoga Mat and Accessories Set",
                            ItemPrice = 40,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            CategoryId = 14,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4920),
                            ItemDescription = "Multi-level cat tree condo for your feline friend. Provides entertainment and a cozy space for your cat to relax.",
                            ItemLikes = 18,
                            ItemLocation = "Woodlands, Singapore",
                            ItemName = "Cat Tree Condo",
                            ItemPrice = 60,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            CategoryId = 2,
                            Condition = "Available",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4940),
                            ItemDescription = "Offering part-time graphic design services. Experienced designer ready to bring your ideas to life.",
                            ItemLikes = 22,
                            ItemLocation = "Chinatown, Singapore",
                            ItemName = "Part-time Graphic Design Services",
                            ItemPrice = 30,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            CategoryId = 1,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1102,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4959),
                            ItemDescription = "Xiaomi M365 electric scooter in good condition. Perfect for commuting and exploring the city with ease.",
                            ItemLikes = 33,
                            ItemLocation = "Raffles Place, Singapore",
                            ItemName = "Electric Scooter - Xiaomi M365",
                            ItemPrice = 300,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4977),
                            ItemDescription = "Complete home theater system with surround sound speakers and HD projector. Elevate your movie nights at home.",
                            ItemLikes = 42,
                            ItemLocation = "Hougang, Singapore",
                            ItemName = "Home Theater System",
                            ItemPrice = 450,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            CategoryId = 9,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(4996),
                            ItemDescription = "L-shaped leather sofa in excellent condition. Stylish and comfortable for your living room.",
                            ItemLikes = 38,
                            ItemLocation = "Bedok, Singapore",
                            ItemName = "Leather Sofa - L-Shaped",
                            ItemPrice = 600,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            CategoryId = 8,
                            Condition = "Brand New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1234,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5019),
                            ItemDescription = "Brand new PlayStation 5 gaming console. Unopened and ready for an immersive gaming experience.",
                            ItemLikes = 50,
                            ItemLocation = "Yishun, Singapore",
                            ItemName = "Gaming Console - PlayStation 5",
                            ItemPrice = 700,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            CategoryId = 6,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5039),
                            ItemDescription = "Vintage Polaroid camera in good working condition. Capture memories with the classic charm of instant photography.",
                            ItemLikes = 25,
                            ItemLocation = "Choa Chu Kang, Singapore",
                            ItemName = "Vintage Polaroid Camera",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 789,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5059),
                            ItemDescription = "Apple Watch Series 6 in like-new condition. Stay connected and track your fitness with this advanced smartwatch.",
                            ItemLikes = 28,
                            ItemLocation = "Pasir Ris, Singapore",
                            ItemName = "Smartwatch - Apple Watch Series 6",
                            ItemPrice = 350,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            CategoryId = 7,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5077),
                            ItemDescription = "Bundle of classic board games for hours of family fun. Includes Monopoly, Scrabble, and Chess.",
                            ItemLikes = 20,
                            ItemLocation = "Tanjong Pagar, Singapore",
                            ItemName = "Classic Board Games Bundle",
                            ItemPrice = 40,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            CategoryId = 13,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5096),
                            ItemDescription = "Complete home gym equipment set including dumbbells, resistance bands, and yoga mat. Achieve your fitness goals at home.",
                            ItemLikes = 36,
                            ItemLocation = "Marina Bay, Singapore",
                            ItemName = "Home Gym Equipment Set",
                            ItemPrice = 300,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            CategoryId = 9,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5114),
                            ItemDescription = "Handcrafted wooden coffee table in good condition. Adds a touch of rustic charm to your living space.",
                            ItemLikes = 15,
                            ItemLocation = "Jurong East, Singapore",
                            ItemName = "Handmade Wooden Coffee Table",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            CategoryId = 10,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5134),
                            ItemDescription = "Compact and portable blender, perfect for making smoothies on the go. USB rechargeable for convenience.",
                            ItemLikes = 23,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Portable Blender - USB Rechargeable",
                            ItemPrice = 30,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            CategoryId = 4,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1102,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5157),
                            ItemDescription = "Canon EOS digital camera in excellent condition. Capture stunning photos and videos with this high-quality camera.",
                            ItemLikes = 42,
                            ItemLocation = "Bishan, Singapore",
                            ItemName = "Digital Camera - Canon EOS",
                            ItemPrice = 600,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            CategoryId = 5,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5176),
                            ItemDescription = "Fender Stratocaster electric guitar in like-new condition. Perfect for both beginners and experienced musicians.",
                            ItemLikes = 38,
                            ItemLocation = "Sentosa, Singapore",
                            ItemName = "Electric Guitar - Fender Stratocaster",
                            ItemPrice = 800,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            CategoryId = 10,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5195),
                            ItemDescription = "Samsung Family Hub smart refrigerator with touchscreen and smart home features. In good working condition.",
                            ItemLikes = 55,
                            ItemLocation = "Clementi, Singapore",
                            ItemName = "Smart Refrigerator - Samsung Family Hub",
                            ItemPrice = 1200,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            CategoryId = 7,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5214),
                            ItemDescription = "Set of collectible comic books in good condition. Dive into the world of superheroes and adventure.",
                            ItemLikes = 20,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Collectible Comic Books Set",
                            ItemPrice = 150,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            CategoryId = 9,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5237),
                            ItemDescription = "Roomba robot vacuum cleaner in great condition. Effortlessly keep your home clean with smart technology.",
                            ItemLikes = 28,
                            ItemLocation = "Woodlands, Singapore",
                            ItemName = "Robot Vacuum Cleaner - Roomba",
                            ItemPrice = 300,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            CategoryId = 7,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5256),
                            ItemDescription = "Bundle of educational toys for kids. Foster learning and creativity in a fun and engaging way.",
                            ItemLikes = 15,
                            ItemLocation = "Jurong West, Singapore",
                            ItemName = "Kids' Educational Toys Bundle",
                            ItemPrice = 50,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            CategoryId = 13,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1102,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5275),
                            ItemDescription = "Complete weightlifting set with barbell and weights. Ideal for strength training at home or in the gym.",
                            ItemLikes = 33,
                            ItemLocation = "Yishun, Singapore",
                            ItemName = "Weightlifting Set",
                            ItemPrice = 200,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5295),
                            ItemDescription = "Anker Nebula portable projector in like-new condition. Enjoy movies and presentations on the big screen.",
                            ItemLikes = 25,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Portable Projector - Anker Nebula",
                            ItemPrice = 150,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            CategoryId = 5,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5313),
                            ItemDescription = "Elegant handmade jewelry set including necklace and earrings. Perfect for special occasions or daily wear.",
                            ItemLikes = 22,
                            ItemLocation = "Marina Bay Sands, Singapore",
                            ItemName = "Handmade Jewelry Set",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 31,
                            AppUserId = 1,
                            CategoryId = 12,
                            Condition = "Available",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5336),
                            ItemDescription = "Voucher for a gourmet cooking class. Learn culinary skills and enjoy a delightful cooking experience.",
                            ItemLikes = 18,
                            ItemLocation = "Chinatown, Singapore",
                            ItemName = "Gourmet Cooking Class Voucher",
                            ItemPrice = 60,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 2,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1201,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5356),
                            ItemDescription = "DJI Mavic Air 2 drone in like-new condition. Capture breathtaking aerial footage with this advanced drone.",
                            ItemLikes = 48,
                            ItemLocation = "Orchard Road, Singapore",
                            ItemName = "DJI Mavic Air 2 Drone",
                            ItemPrice = 800,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 3,
                            CategoryId = 9,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5376),
                            ItemDescription = "Sturdy home office desk in good condition. Ideal for remote work or studying from home.",
                            ItemLikes = 32,
                            ItemLocation = "Bukit Timah, Singapore",
                            ItemName = "Home Office Desk",
                            ItemPrice = 150,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 4,
                            CategoryId = 13,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5399),
                            ItemDescription = "Collection of vintage vinyl records in good condition. Enjoy the classic sounds of music history.",
                            ItemLikes = 25,
                            ItemLocation = "Tampines, Singapore",
                            ItemName = "Vintage Vinyl Record Collection",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 5,
                            CategoryId = 10,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5417),
                            ItemDescription = "Nest Learning smart thermostat for efficient climate control. Save energy and customize your home's temperature.",
                            ItemLikes = 35,
                            ItemLocation = "Katong, Singapore",
                            ItemName = "Smart Thermostat - Nest Learning",
                            ItemPrice = 100,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 6,
                            CategoryId = 7,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5436),
                            ItemDescription = "Schwinn kids' bicycle in good condition. Perfect for young riders to learn and enjoy cycling.",
                            ItemLikes = 18,
                            ItemLocation = "Serangoon, Singapore",
                            ItemName = "Kids' Bicycle - Schwinn",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 7,
                            CategoryId = 6,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5456),
                            ItemDescription = "Abstract digital art print for home decor. Add a touch of modernity to your living space.",
                            ItemLikes = 20,
                            ItemLocation = "Hougang, Singapore",
                            ItemName = "Digital Art Print - Abstract",
                            ItemPrice = 40,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 8,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5475),
                            ItemDescription = "Sony WF-1000XM4 wireless earbuds in like-new condition. Experience premium audio quality on the go.",
                            ItemLikes = 30,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Wireless Earbuds - Sony WF-1000XM4",
                            ItemPrice = 180,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 9,
                            CategoryId = 10,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5498),
                            ItemDescription = "Breville Barista Express coffee maker in excellent condition. Brew barista-quality coffee at home.",
                            ItemLikes = 40,
                            ItemLocation = "Woodlands, Singapore",
                            ItemName = "Coffee Maker - Breville Barista Express",
                            ItemPrice = 300,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 10,
                            CategoryId = 13,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5517),
                            ItemDescription = "Fitbit Charge 4 fitness tracker in good working condition. Monitor your health and stay active.",
                            ItemLikes = 25,
                            ItemLocation = "Tanjong Pagar, Singapore",
                            ItemName = "Fitness Tracker - Fitbit Charge 4",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 41,
                            AppUserId = 11,
                            CategoryId = 9,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5536),
                            ItemDescription = "Handmade quilt with vintage-style patterns. Add warmth and style to your bedroom.",
                            ItemLikes = 22,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Handmade Quilt - Vintage Style",
                            ItemPrice = 100,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 42,
                            AppUserId = 12,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1201,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5554),
                            ItemDescription = "Samsung 4K smart LED TV in like-new condition. Immerse yourself in stunning visuals and smart features.",
                            ItemLikes = 55,
                            ItemLocation = "Raffles Place, Singapore",
                            ItemName = "Smart LED TV - Samsung 4K",
                            ItemPrice = 700,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 43,
                            AppUserId = 13,
                            CategoryId = 1,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5573),
                            ItemDescription = "Segway Ninebot electric scooter in good condition. Convenient and eco-friendly mode of transportation.",
                            ItemLikes = 32,
                            ItemLocation = "Bishan, Singapore",
                            ItemName = "Electric Scooter - Segway Ninebot",
                            ItemPrice = 400,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 44,
                            AppUserId = 14,
                            CategoryId = 9,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5592),
                            ItemDescription = "Modern dining table set with chairs in excellent condition. Upgrade your dining space with contemporary style.",
                            ItemLikes = 45,
                            ItemLocation = "Bedok, Singapore",
                            ItemName = "Modern Dining Table Set",
                            ItemPrice = 550,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 45,
                            AppUserId = 15,
                            CategoryId = 4,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5616),
                            ItemDescription = "Wireless keyboard and mouse combo in great condition. Improve your productivity with cable-free peripherals.",
                            ItemLikes = 28,
                            ItemLocation = "Yishun, Singapore",
                            ItemName = "Wireless Keyboard and Mouse Combo",
                            ItemPrice = 50,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 46,
                            AppUserId = 16,
                            CategoryId = 6,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5635),
                            ItemDescription = "Collection of vintage fountain pens in good condition. Perfect for pen enthusiasts and collectors.",
                            ItemLikes = 25,
                            ItemLocation = "Choa Chu Kang, Singapore",
                            ItemName = "Vintage Fountain Pen Collection",
                            ItemPrice = 90,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 47,
                            AppUserId = 17,
                            CategoryId = 9,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 789,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5654),
                            ItemDescription = "Ring Video Doorbell in like-new condition. Enhance your home security with smart doorbell features.",
                            ItemLikes = 22,
                            ItemLocation = "Pasir Ris, Singapore",
                            ItemName = "Smart Doorbell - Ring Video Doorbell",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 48,
                            AppUserId = 18,
                            CategoryId = 9,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5673),
                            ItemDescription = "Set of artificial potted plants to add greenery to your home. No maintenance required!",
                            ItemLikes = 18,
                            ItemLocation = "Tanjong Pagar, Singapore",
                            ItemName = "Artificial Potted Plants Set",
                            ItemPrice = 30,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 49,
                            AppUserId = 19,
                            CategoryId = 13,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5691),
                            ItemDescription = "Bundle of outdoor camping gear including tent, sleeping bag, and camping stove. Gear up for your next adventure.",
                            ItemLikes = 36,
                            ItemLocation = "Marina Bay, Singapore",
                            ItemName = "Outdoor Camping Gear Bundle",
                            ItemPrice = 200,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 50,
                            AppUserId = 20,
                            CategoryId = 9,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5744),
                            ItemDescription = "Sturdy wooden bookshelf in good condition. Organize your book collection with style.",
                            ItemLikes = 15,
                            ItemLocation = "Jurong East, Singapore",
                            ItemName = "Wooden Bookshelf",
                            ItemPrice = 100,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 51,
                            AppUserId = 21,
                            CategoryId = 4,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5763),
                            ItemDescription = "Wireless charging pad for convenient charging of your devices. Stay powered up with this sleek accessory.",
                            ItemLikes = 23,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Wireless Charging Pad",
                            ItemPrice = 20,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 52,
                            AppUserId = 22,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 1201,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5782),
                            ItemDescription = "Garmin Venu 2 smartwatch in like-new condition. Track your fitness and stay connected with this advanced wearable.",
                            ItemLikes = 40,
                            ItemLocation = "Bishan, Singapore",
                            ItemName = "Smartwatch - Garmin Venu 2",
                            ItemPrice = 250,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 53,
                            AppUserId = 23,
                            CategoryId = 8,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5801),
                            ItemDescription = "Vintage vinyl record player in good working condition. Enjoy your favorite tunes with a touch of nostalgia.",
                            ItemLikes = 28,
                            ItemLocation = "Sentosa, Singapore",
                            ItemName = "Vintage Vinyl Record Player",
                            ItemPrice = 180,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 54,
                            AppUserId = 24,
                            CategoryId = 4,
                            Condition = "Good",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5820),
                            ItemDescription = "Portable Bluetooth speaker in good condition. Take your music wherever you go with this compact device.",
                            ItemLikes = 25,
                            ItemLocation = "Clementi, Singapore",
                            ItemName = "Portable Bluetooth Speaker",
                            ItemPrice = 50,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 55,
                            AppUserId = 25,
                            CategoryId = 10,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5843),
                            ItemDescription = "KitchenAid electric mixer in excellent condition. Make baking and cooking a breeze with this reliable appliance.",
                            ItemLikes = 32,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Electric Mixer - KitchenAid",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 56,
                            AppUserId = 26,
                            CategoryId = 7,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5862),
                            ItemDescription = "Collection of popular board games in good condition. Bring friends and family together for game night fun.",
                            ItemLikes = 22,
                            ItemLocation = "Woodlands, Singapore",
                            ItemName = "Board Game Collection",
                            ItemPrice = 60,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 57,
                            AppUserId = 27,
                            CategoryId = 9,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5881),
                            ItemDescription = "Smart home security camera in like-new condition. Monitor your home remotely for added peace of mind.",
                            ItemLikes = 35,
                            ItemLocation = "Jurong West, Singapore",
                            ItemName = "Smart Home Security Camera",
                            ItemPrice = 90,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 58,
                            AppUserId = 28,
                            CategoryId = 6,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5899),
                            ItemDescription = "Vintage Royal typewriter in good working condition. Perfect for writers and collectors of retro items.",
                            ItemLikes = 18,
                            ItemLocation = "Yishun, Singapore",
                            ItemName = "Vintage Typewriter - Royal",
                            ItemPrice = 100,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 59,
                            AppUserId = 29,
                            CategoryId = 9,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5919),
                            ItemDescription = "Fiddle Leaf Fig indoor plant for a touch of greenery in your home. Low maintenance and aesthetically pleasing.",
                            ItemLikes = 20,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Indoor Plant - Fiddle Leaf Fig",
                            ItemPrice = 30,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 60,
                            AppUserId = 30,
                            CategoryId = 8,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5938),
                            ItemDescription = "Wacom Intuos digital art tablet in great condition. Ideal for digital artists and graphic designers.",
                            ItemLikes = 30,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Digital Art Tablet - Wacom Intuos",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 61,
                            AppUserId = 1,
                            CategoryId = 13,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5957),
                            ItemDescription = "Set of fitness resistance bands for effective home workouts. Stay fit and healthy with these versatile exercise tools.",
                            ItemLikes = 25,
                            ItemLocation = "Chinatown, Singapore",
                            ItemName = "Fitness Resistance Bands Set",
                            ItemPrice = 20,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 62,
                            AppUserId = 2,
                            CategoryId = 9,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5976),
                            ItemDescription = "iRobot Roomba robot vacuum cleaner in good working condition. Effortlessly keep your home clean with smart technology.",
                            ItemLikes = 28,
                            ItemLocation = "Chinatown, Singapore",
                            ItemName = "Robot Vacuum Cleaner - iRobot Roomba",
                            ItemPrice = 300,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 63,
                            AppUserId = 3,
                            CategoryId = 8,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(5994),
                            ItemDescription = "Logitech G Pro wireless gaming mouse in like-new condition. Elevate your gaming experience with precision and speed.",
                            ItemLikes = 32,
                            ItemLocation = "Bukit Timah, Singapore",
                            ItemName = "Wireless Gaming Mouse - Logitech G Pro",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 64,
                            AppUserId = 4,
                            CategoryId = 10,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6013),
                            ItemDescription = "Portable espresso machine in excellent condition. Enjoy barista-quality coffee wherever you go.",
                            ItemLikes = 25,
                            ItemLocation = "Bedok, Singapore",
                            ItemName = "Portable Espresso Machine",
                            ItemPrice = 100,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 65,
                            AppUserId = 5,
                            CategoryId = 1,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6033),
                            ItemDescription = "Foldable electric scooter in like-new condition. Commute with ease and style using this convenient mode of transportation.",
                            ItemLikes = 35,
                            ItemLocation = "Tampines, Singapore",
                            ItemName = "Foldable Electric Scooter",
                            ItemPrice = 350,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 66,
                            AppUserId = 6,
                            CategoryId = 4,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6052),
                            ItemDescription = "Sony WH-1000XM4 Bluetooth headphones in excellent condition. Immerse yourself in high-quality audio with noise-canceling technology.",
                            ItemLikes = 42,
                            ItemLocation = "Hougang, Singapore",
                            ItemName = "Bluetooth Headphones - Sony WH-1000XM4",
                            ItemPrice = 250,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 67,
                            AppUserId = 7,
                            CategoryId = 4,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6070),
                            ItemDescription = "Nikon F2 vintage camera in good working condition. Capture timeless moments with this classic film camera.",
                            ItemLikes = 30,
                            ItemLocation = "Serangoon, Singapore",
                            ItemName = "Vintage Camera - Nikon F2",
                            ItemPrice = 180,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 68,
                            AppUserId = 8,
                            CategoryId = 9,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6089),
                            ItemDescription = "Set of smart LED bulbs for customizable lighting. Transform your home with modern and energy-efficient lighting.",
                            ItemLikes = 18,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Smart LED Bulbs Set",
                            ItemPrice = 40,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 69,
                            AppUserId = 9,
                            CategoryId = 5,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6113),
                            ItemDescription = "Yamaha P-125 digital piano in like-new condition. Perfect for aspiring musicians and music enthusiasts.",
                            ItemLikes = 25,
                            ItemLocation = "Woodlands, Singapore",
                            ItemName = "Digital Piano - Yamaha P-125",
                            ItemPrice = 600,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 70,
                            AppUserId = 10,
                            CategoryId = 8,
                            Condition = "Slightly Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6132),
                            ItemDescription = "Razer BlackWidow wireless gaming keyboard in great condition. Enhance your gaming setup with this high-performance keyboard.",
                            ItemLikes = 28,
                            ItemLocation = "Jurong West, Singapore",
                            ItemName = "Wireless Gaming Keyboard - Razer BlackWidow",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 71,
                            AppUserId = 11,
                            CategoryId = 4,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6151),
                            ItemDescription = "Canon EF 24-70mm professional camera lens in excellent condition. Capture sharp and detailed images with this high-quality lens.",
                            ItemLikes = 35,
                            ItemLocation = "Toa Payoh, Singapore",
                            ItemName = "Professional Camera Lens - Canon EF 24-70mm",
                            ItemPrice = 800,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 72,
                            AppUserId = 12,
                            CategoryId = 4,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6170),
                            ItemDescription = "Wireless charger stand for convenient charging of your devices. Stay organized and powered up with this sleek accessory.",
                            ItemLikes = 22,
                            ItemLocation = "Chinatown, Singapore",
                            ItemName = "Wireless Charger Stand",
                            ItemPrice = 30,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 73,
                            AppUserId = 13,
                            CategoryId = 6,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 543,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6189),
                            ItemDescription = "Stand for vintage vinyl record players in good condition. Showcase and organize your vinyl collection with style.",
                            ItemLikes = 18,
                            ItemLocation = "Bishan, Singapore",
                            ItemName = "Vintage Vinyl Record Player Stand",
                            ItemPrice = 70,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 74,
                            AppUserId = 14,
                            CategoryId = 4,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6208),
                            ItemDescription = "ASUS ZenScreen portable monitor in like-new condition. Boost your productivity with an additional display on the go.",
                            ItemLikes = 30,
                            ItemLocation = "Bedok, Singapore",
                            ItemName = "Portable Monitor - ASUS ZenScreen",
                            ItemPrice = 200,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 75,
                            AppUserId = 15,
                            CategoryId = 13,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6226),
                            ItemDescription = "Set of fitness dumbbells in good condition. Build strength and stay active with these versatile workout tools.",
                            ItemLikes = 20,
                            ItemLocation = "Ang Mo Kio, Singapore",
                            ItemName = "Fitness Dumbbell Set",
                            ItemPrice = 80,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 76,
                            AppUserId = 16,
                            CategoryId = 8,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 987,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6245),
                            ItemDescription = "PlayStation 5 gaming console in excellent condition. Immerse yourself in the latest gaming experiences with this powerful console.",
                            ItemLikes = 40,
                            ItemLocation = "Clementi, Singapore",
                            ItemName = "Gaming Console - PlayStation 5",
                            ItemPrice = 600,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 77,
                            AppUserId = 17,
                            CategoryId = 9,
                            Condition = "New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6265),
                            ItemDescription = "Modern wall clock to enhance your home decor. Stay punctual in style with this contemporary timepiece.",
                            ItemLikes = 25,
                            ItemLocation = "Hougang, Singapore",
                            ItemName = "Modern Wall Clock",
                            ItemPrice = 25,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 78,
                            AppUserId = 18,
                            CategoryId = 8,
                            Condition = "Like New",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 654,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6284),
                            ItemDescription = "Bose 700 wireless soundbar in like-new condition. Elevate your home entertainment experience with immersive sound.",
                            ItemLikes = 35,
                            ItemLocation = "Jurong West, Singapore",
                            ItemName = "Wireless Soundbar - Bose 700",
                            ItemPrice = 350,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 79,
                            AppUserId = 19,
                            CategoryId = 13,
                            Condition = "Used",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 765,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6302),
                            ItemDescription = "4-person camping tent in good condition. Enjoy outdoor adventures with this reliable and spacious tent.",
                            ItemLikes = 22,
                            ItemLocation = "Marina Bay, Singapore",
                            ItemName = "Camping Tent - 4 Person",
                            ItemPrice = 120,
                            ItemStatus = 1
                        },
                        new
                        {
                            Id = 80,
                            AppUserId = 20,
                            CategoryId = 9,
                            Condition = "Excellent",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "https://via.placeholder.com/300",
                            ItemClicks = 876,
                            ItemDate = new DateTime(2024, 1, 31, 22, 29, 35, 296, DateTimeKind.Local).AddTicks(6325),
                            ItemDescription = "Dyson Pure Cool air purifier in excellent condition. Breathe clean air with advanced filtration technology.",
                            ItemLikes = 30,
                            ItemLocation = "Tanjong Pagar, Singapore",
                            ItemName = "Air Purifier - Dyson Pure Cool",
                            ItemPrice = 300,
                            ItemStatus = 1
                        });
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SaleTransactionID")
                        .HasColumnType("int");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<int?>("SwapTransactionID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserID");

                    b.HasIndex("SaleTransactionID");

                    b.HasIndex("StaffID");

                    b.HasIndex("SwapTransactionID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReviewRating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SaleTransactionID")
                        .HasColumnType("int");

                    b.Property<int?>("SwapTransactionID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserID");

                    b.HasIndex("SaleTransactionID");

                    b.HasIndex("SwapTransactionID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.SaleTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ItemId");

                    b.ToTable("SaleTransactions");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StaffDepartment")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StaffEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffFirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StaffHPNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StaffHireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffLastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StaffPosition")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.SwapTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUser1Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("AppUser2Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SwapItem1Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SwapItem2Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUser1Id");

                    b.HasIndex("AppUser2Id");

                    b.HasIndex("SwapItem1Id");

                    b.HasIndex("SwapItem2Id");

                    b.ToTable("SwapTransactions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Sellora.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Sellora.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Sellora.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Item", b =>
                {
                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser")
                        .WithMany("Items")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Report", b =>
                {
                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser")
                        .WithMany("Reports")
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.SaleTransaction", "SaleTransaction")
                        .WithMany()
                        .HasForeignKey("SaleTransactionID");

                    b.HasOne("Sellora.Shared.Domain.Staff", "Staff")
                        .WithMany("Reports")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.SwapTransaction", "SwapTransaction")
                        .WithMany()
                        .HasForeignKey("SwapTransactionID");

                    b.Navigation("AppUser");

                    b.Navigation("SaleTransaction");

                    b.Navigation("Staff");

                    b.Navigation("SwapTransaction");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Review", b =>
                {
                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser")
                        .WithMany("Reviews")
                        .HasForeignKey("AppUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.SaleTransaction", "SaleTransaction")
                        .WithMany()
                        .HasForeignKey("SaleTransactionID");

                    b.HasOne("Sellora.Shared.Domain.SwapTransaction", "SwapTransaction")
                        .WithMany()
                        .HasForeignKey("SwapTransactionID");

                    b.Navigation("AppUser");

                    b.Navigation("SaleTransaction");

                    b.Navigation("SwapTransaction");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.SaleTransaction", b =>
                {
                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser")
                        .WithMany("SaleTransactions")
                        .HasForeignKey("AppUserId");

                    b.HasOne("Sellora.Shared.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.Navigation("AppUser");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.SwapTransaction", b =>
                {
                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser1")
                        .WithMany()
                        .HasForeignKey("AppUser1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.AppUser", "AppUser2")
                        .WithMany()
                        .HasForeignKey("AppUser2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.Item", "SwapItem1")
                        .WithMany()
                        .HasForeignKey("SwapItem1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellora.Shared.Domain.Item", "SwapItem2")
                        .WithMany()
                        .HasForeignKey("SwapItem2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser1");

                    b.Navigation("AppUser2");

                    b.Navigation("SwapItem1");

                    b.Navigation("SwapItem2");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.AppUser", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("SaleTransactions");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Sellora.Shared.Domain.Staff", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}

@*ASPNetr-yanWorks*@

<!-- EditForm for managing staff details -->
<EditForm Model="@staff" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Fieldset to disable form controls if Disabled is true -->
    <fieldset disabled="@Disabled">

        <!-- First Name -->
        <div class="input-container">
            <div class="form-group">
                <label>First Name: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffFirstName" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffFirstName)" />
                </div>
            </div>
        </div>

        <!-- Last Name -->
        <div class="input-container">
            <div class="form-group">
                <label>Last Name: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffLastName" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffLastName)" />
                </div>
            </div>
        </div>

        <!-- Email -->
        <div class="input-container">
            <div class="form-group">
                <label>Email: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffEmail" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffEmail)" />
                </div>
            </div>
        </div>

        <!-- Date of Hire -->
        <div class="input-container">
            <div class="form-group">
                <label>Date of Hire: </label>
                <div>
                    <InputDate @bind-Value="@staff.StaffHireDate" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffHireDate)" />
                </div>
            </div>
        </div>

        <!-- Position -->
        <div class="input-container">
            <div class="form-group">
                <label>Position: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffPosition" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffPosition)" />
                </div>
            </div>
        </div>

        <!-- Address -->
        <div class="input-container">
            <div class="form-group">
                <label>Address: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffAddress" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffAddress)" />
                </div>
            </div>
        </div>

        <!-- Contact -->
        <div class="input-container">
            <div class="form-group">
                <label>Contact: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffHPNum" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffHPNum)" />
                </div>
            </div>
        </div>

        <!-- Department -->
        <div class="input-container">
            <div class="form-group">
                <label>Department: </label>
                <div>
                    <InputText @bind-Value="@staff.StaffDepartment" class="form-control" />
                    <ValidationMessage For="@(() => staff.StaffDepartment)" />
                </div>
            </div>
        </div>
    </fieldset>
    <br />

    <!-- Submit button (visible only if the form is not disabled) -->
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
</EditForm>

@code {
    // Parameters for the component
    [Parameter] public bool Disabled { get; set; } = false;         // Determines whether form controls should be disabled
    [Parameter] public Staff? staff { get; set; }                   // This parameters store the staff details
    [Parameter] public string ButtonText { get; set; } = "Save";    // This sets up what the button does
    [Parameter] public EventCallback OnValidSubmit { get; set; }    // EventCallback to handle Form Submission
}

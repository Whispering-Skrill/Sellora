@*ASPNetr-yanWorks*@
@page "/reports/"
@inject HttpClient _client
@inject HttpInterceptorService _interceptor
@implements IDisposable
@inject IJSRuntime js
@attribute [Authorize]

<PageTitle>Reports</PageTitle>

<div class="report-topbar">
    <h2 class="report-title">Reports</h2>
    <a href="/reports/create" class="btn btn-secondary">
        <span class="oi oi-plus" style="margin-top: 5px;"></span>
    </a>
</div>



<div style="margin-top: 10px;">
    @if (Reports == null)
    {
        <div class="alert alert-info">Loading Reports...</div>
    }
    else
    {
        @foreach (var report in Reports)
        {
            <div class="report-box">
                <div class="report-box-innercontainer">
                    <h4 class="report-box-title">@report.ReportTitle</h4>
                    <p class="report-box-details">@report.AppUser.UserName ------- @report.ReportDate.Day / @report.ReportDate.Month / @report.ReportDate.Year</p>
                    <p class="report-box-content">@report.ReportContent</p>
                </div>
                <div class="report-box-control-container">
                    <div class="report-box-detail-button">
                        <a href="/reports/view/@report.Id" class="btn btn-primary">
                            More Details
                        </a>
                    </div>
                    <div class="report-box-control-bottom">
                        <a href="/reports/edit/@report.Id" class="btn btn-warning" style="width:100%; margin-right:5px;">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" style="width:100%; margin-left:5px;" @onclick="@(()=>Delete(report.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </div>
                </div>
            </div>
        }
        @*
    <table class="table table-responsive">
    <thead>
    <tr>
    <th>Report Title</th>
    <th>Reporter ID</th>
    <th>Report Date</th>
    <th>Report Content</th>
    <th>Sale Transaction ID</th>
    <th>Swap Transaction ID</th>
    <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var report in Reports)
    {
    <tr>
    <td>@report.ReportTitle</td>
    <td>@report.User.Id</td>
    <td>@report.ReportDate</td>
    <td>@report.ReportContent</td>
    <td>@report.SaleTransaction.Id</td>
    <td>@report.SwapTransaction.Id</td>
    <td>
    <a href="/reports/view/@report.Id" class="btn btn-primary">
    <span class="oi oi-book"></span>
    </a>
    <a href="/reports/edit/@report.Id" class="btn btn-warning">
    <span class="oi oi-pencil"></span>
    </a>
    <button class="btn btn-danger" @onclick="@(()=>Delete(report.Id))">
    <span class="oi oi-delete"></span>
    </button>
    </td>
    </tr>
    }
    </tbody>
    </table>
    *@
    }
</div>

@code {
    // Create a List based on Staff Table in Database
    private List<Report>? Reports;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Reports = await _client.GetFromJsonAsync<List<Report>>($"{Endpoints.ReportsEndpoint}");
    }

    async Task Delete(int reportID)
    {
        if (Reports != null)
        {
            var report = Reports.First(q => q.Id == reportID);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete Report {report.Id}, Dated: {report.ReportDate}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.ReportsEndpoint}/{reportID}");
                await OnInitializedAsync();
            }
        }
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}

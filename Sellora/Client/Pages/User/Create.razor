@page "/users/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
@using Sellora.Client.Components

<div class="user-topbar">
    <h2 class="user-title">Create User</h2>
    <BackToList Target="users" />
</div>

<div style="border-bottom:solid black 1px; padding-top:3px; margin-bottom:10px;">
    @*FOR SPACING*@
</div>

<EditForm Model="@user" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>UserName: </label>
        <div>
            <InputText @bind-Value="@user.UserName" class="form-control" />
            <ValidationMessage For="@(() => user.UserName)" />
        </div>
    </div>

    <div class="form-group">
        <label>First Name: </label>
        <div>
            <InputText @bind-Value="@user.UserFirstName" class="form-control" />
            <ValidationMessage For="@(() => user.UserFirstName)" />
        </div>
    </div>
    
    <div class="form-group">
        <label>Last Name: </label>
        <div>
            <InputText @bind-Value="@user.UserLastName" class="form-control" />
            <ValidationMessage For="@(() => user.UserLastName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email: </label>
        <div>
            <InputText @bind-Value="@user.UserEmail" class="form-control" />
            <ValidationMessage For="@(() => user.UserEmail)" />
        </div>
    </div>

    <div class="form-group">
        <label>Register Date: </label>
        <div>
            <InputDate @bind-Value="@user.UserRegDate" class="form-control" />
            <ValidationMessage For="@(() => user.UserRegDate)" />
        </div>
    </div>

    <div class="form-group">
        <label>User Description: </label>
        <div>
            <InputText @bind-Value="@user.UserDescription" class="form-control" />
            <ValidationMessage For="@(() => user.UserDescription)" />
        </div>
    </div>

    <div class="form-group">
        <label>Last Time Online: </label>
        <div>
            <InputDate @bind-Value="@user.UserLastOnline" class="form-control" />
            <ValidationMessage For="@(() => user.UserLastOnline)" />
        </div>
    </div>

    <br />

    <button type="submit" class="btn btn-success btn-block">
        Create User
    </button>

</EditForm>

@code {
    AppUser user = new AppUser();

    private IList<AppUser>? AppUsers;
    private IList<Category>? Categories;

    protected async override Task OnInitializedAsync()
    {
        AppUsers = await _client.GetFromJsonAsync<List<AppUser>>($"{Endpoints.AppUsersEndpoint}");
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }

    private async Task CreateUser()
    {
        await _client.PostAsJsonAsync(Endpoints.AppUsersEndpoint, user);
        _navManager.NavigateTo("/users/");
    }

}

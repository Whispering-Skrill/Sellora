@*ASPNetr-yanWorks*@
@page "/swaptransactions/create"
@inject HttpClient _client
@inject NavigationManager _navManager
@using Sellora.Client.Components

<div class="swaptransaction-topbar">
    <h2 class="swaptransaction-title">Create Swap Transaction</h2>
    <BackToList Target="swaptransactions" />
</div>

<div style="border-bottom:solid black 1px; padding-top:3px; margin-bottom:10px;">
    @*FOR SPACING*@
</div>

<SwapTransactionFormComponent ButtonText="Submit" swaptransaction="swaptransaction" OnValidSubmit="@CreateSwapTransaction" />

@code {
    SwapTransaction swaptransaction = new SwapTransaction();

    private IList<AppUser>? AppUsers;
    private IList<Staff>? Staffs;
    private IList<Item>? Items;

    protected async Task OnIntializedAsync()
    {
        AppUsers = await _client.GetFromJsonAsync<List<AppUser>>($"{Endpoints.AppUsersEndpoint}");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Items = await _client.GetFromJsonAsync<List<Item>>($"{Endpoints.ItemsEndpoint}");
    }

    private async Task CreateSwapTransaction()
    {
        await _client.PostAsJsonAsync(Endpoints.SwapTransactionsEndpoint, swaptransaction);
        _navManager.NavigateTo("/swaptransactions/");
    }
}

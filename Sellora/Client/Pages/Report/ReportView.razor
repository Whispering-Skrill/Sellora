@*ASPNetr-yanWorks*@
@page "/reports/view/{id:int}"
@implements IDisposable
@inject HttpClient _client
@inject NavigationManager _navManager
@inject HttpInterceptorService _interceptor
@attribute [Authorize(Roles = "Administrator")]

<!-- Page Title -->
<PageTitle>Viewing Report @report.Id</PageTitle>

<!-- Topbar with the title and a back-to-list button -->
<div class="report-topbar">
    <h2 class="report-title">View Report with ID: @report.Id</h2>
    <BackToList Target="reports" />
</div>

<div style="border-bottom:solid black 1px; padding-top:3px; margin-bottom:10px;">
    <!-- Separator for spacing -->
</div>

<!-- This Generates a Report Formcomponent with Viewing Parameters -->
<ReportFormComponent report="report" Disabled="true" />

@code {
    <!-- Parameter for receiving the report ID from the URL -->
    [Parameter] public int id { get; set; }

    <!-- Report object to store report details -->
    Report? report = new Report();

    // This runs asynchronously when the component/page is initialised
    protected async override Task OnInitializedAsync()
    {
        // Initialises the interceptor module
        // This monitors HTTP Events for Global Error Handling
        _interceptor.MonitorEvent();
    }

    // This runs asynchronously when the parameters are initialised
    protected async override Task OnParametersSetAsync()
    {
        // Fetch data from Server Endpoints using HttpClient
        report = await _client.GetFromJsonAsync<Report>($"{Endpoints.ReportsEndpoint}/{id}");
    }

    // Disposes of resources when the component is disposed
    public void Dispose()
    {
        // This disposes of global error handling events
        _interceptor.DisposeEvent();
    }
}
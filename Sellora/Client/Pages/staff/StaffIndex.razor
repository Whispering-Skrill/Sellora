@*ASPNetr-yanWorks*@
@page "/staffs/"
@inject HttpClient _client
@inject HttpInterceptorService _interceptor
@implements IDisposable
@inject IJSRuntime js
@attribute [Authorize]

<div class="staff-topbar">
    <div style="flex:1">
        <h2 class="staff-title">Our Staff</h2>
    </div>
    <a href="/staffs/create" class="btn btn-secondary" style="align-self:flex-start;2">
        <span class="oi oi-plus" style="margin-top: 5px;"></span>
    </a>
</div>

<div style="border-bottom:solid black 1px; padding-top:3px;">
    @*FOR SPACING*@
</div>

@if (Staffs == null)
{
    <div class="alert alert-info">Loading Staff...</div>
}
else
{
    @*for JS datatable script*@
    <table class ="table table-hover" id="staffTable">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Hire Date</th>
                <th>Position</th>
                <th>Address</th>
                <th>Contact</th>
                <th>Department</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var staff in Staffs)
            {
                <tr>
                    <td>@staff.StaffFirstName</td>
                    <td>@staff.StaffLastName</td>
                    <td>@staff.StaffEmail</td>
                    <td>@staff.StaffHireDate</td>
                    <td>@staff.StaffPosition</td>
                    <td>@staff.StaffAddress</td>
                    <td>@staff.StaffHPNum</td>
                    <td>@staff.StaffDepartment</td>
                    <td>
                        <a href="/staffs/view/@staff.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/staffs/edit/@staff.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class ="btn btn-danger" @onclick="@(()=>Delete(staff.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    // Create a List based on Staff Table in Database
    private List<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
    }

    // For JS datatable script
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddModifiedDataTable", "#staffTable");
    }

    async Task Delete(int staffID)
    {
        if (Staffs != null)
        {
            var staff = Staffs.First(q => q.Id == staffID);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {staff.StaffFirstName} {staff.StaffLastName}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.StaffsEndpoint}/{staffID}");
                await OnInitializedAsync();
            }
        }
    }

    public void Dispose()
    {
        // For JS datatable script
        js.InvokeVoidAsync("DataTablesDispose", "#staffTable");
        _interceptor.DisposeEvent();
    }
}

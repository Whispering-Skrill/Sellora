@inject NavigationManager Navigation

<!-- Authorisation Section: Logged in users will see a profile and log out button, Others have the option to register or login -->
<AuthorizeView>

    <!-- For Logged In Users -->
    <Authorized>
        <!-- Profile Button that brings logged in users to user information page -->
        <div class="login-item px-2" style="width:auto">
            <NavLink class="nav-link" href="profile" Match="NavLinkMatch.All" style="width:auto;">
                <span class="oi oi-person" aria-hidden="true"></span> @context.User.Identity?.Name
            </NavLink>
        </div>
        <!-- Log Out Button -->
        <div class="login-item px-4" style="margin-right: 7px;">
            <NavLink class="nav-link" href="#" @onclick="BeginLogOut" Match="NavLinkMatch.All">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
        <!-- Sell Item / Create Item Button -->
        <div class="sell-item px-1">
            <NavLink class="nav-link" href="items/create" Match="NavLinkMatch.All"> SELL
            </NavLink>
        </div>
    </Authorized>
    <NotAuthorized>
        <!-- Registration Button -->
        <div class="login-item px-4">
            <NavLink class="nav-link" href="authentication/register" Match="NavLinkMatch.All">
                <span class="oi oi-person" aria-hidden="true"></span> Register
            </NavLink>
        </div>
        <!-- Login Button -->
        <div class="login-item px-0">
            <NavLink class="nav-link" href="authentication/login" Match="NavLinkMatch.All">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login
            </NavLink>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    // Method to log user out
    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
}
